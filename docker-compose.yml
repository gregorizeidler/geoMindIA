version: '3.8'

services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: geospatial_db
    environment:
      POSTGRES_DB: geospatial_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: geospatial_backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: geospatial_ai
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
    command: python backend/main.py

  # Frontend (using nginx)
  frontend:
    image: nginx:alpine
    container_name: geospatial_frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - backend

volumes:
  postgres_data:

